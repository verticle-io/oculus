<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.verticle.k8s</groupId>
	<artifactId>oculus</artifactId>
	<version>0.8</version>
	<packaging>jar</packaging>

	<name>oculus</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- docker -->
		<docker.build.skip>true</docker.build.skip>
		<docker.host.url>unix:///var/run/docker.sock</docker.host.url>
		<docker.image.prefix>verticleio</docker.image.prefix>
		<docker.plugin.version>0.4.13</docker.plugin.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>kubernetes-client</artifactId>
			<version>4.0.3</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-config</artifactId>
			<version>0.3.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-kubernetes-core</artifactId>
			<version>0.3.0.RELEASE</version>
		</dependency>

        <dependency>
            <groupId>com.github.verticleio</groupId>
            <artifactId>fireboard-client-java</artifactId>
			<version>LATEST</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker.plugin.version}</version>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>tag-image</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
							</execution>
							<!--
							<execution>
								<id>push-image</id>
								<phase>package</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
							-->
						</executions>
						<configuration>
							<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
							<image>${docker.image.prefix}/${project.artifactId}</image>
							<newName>${docker.image.prefix}/${project.artifactId}
							</newName>
							<imageTags>
								<imageTag>${project.version}</imageTag>
								<imageTag>latest</imageTag>
							</imageTags>
							<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
							<dockerHost>${docker.host.url}</dockerHost>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
							<noCache>true</noCache>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
